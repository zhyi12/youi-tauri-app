<script lang="ts">
    import {onMount} from "svelte";

    import {DataTable,ColumnButtons,Toolbar,Button,Icon,plusIcon,cellComponent} from "$lib/youi";
    import {{"{"}}{{name}}Store} from "$lib/app-stores/{{module_name}}/{{name}}Store";
    import {APP_MESSAGE} from "$lib/app-page/page.message";
    import Editor from "./Editor.svelte";

    import type {ColumnDef} from "@tanstack/table-core";
    import type {{"{"}}{{cname}}{{"}"}} from "$lib/app-entity/{{module_name}}/{{name}}";

    /**
     *
     */
    const NEW_RECORD:{{name}} = {
        id:'',
        caption:''
    };

    let pageSize = 10;
    let pageIndex = 1;
    let editorIsOpen = false;
    let editorTitle = '';

    let editing{{cname}} = {...NEW_RECORD};

    let columns:ColumnDef<{{cname}}>[] = [
        {
            accessorKey: 'name',
            header:'数据项名'
        }, {
            accessorKey: 'caption',
            header:'中文描述'
        },{
            accessorKey: 'column_name',
            header:'列名'
        }, {
            accessorKey: 'full_caption',
            header:'中文全称'
        },{
            accessorKey:'operator',
            header:'操作',
            cell:info=>{
                return cellComponent(ColumnButtons,{
                    record:{...info.row.original},
                    buttons:[
                        {name:"modify", text:'修改', action:openModify},
                        {name:"remove", text:'删除', action:doRemove{{name}}},
                    ]
                })
            }
        }
    ];

    /**
     * 回掉函数 - 数据表格分页事件
     * @param detail
     */
    const handle_pagination = async ({detail}) => {
        await doQuery(detail.pageIndex);
    }

    /**
     * 打开{{caption}}新建窗口
     */
    const openAdd{{cname}} = async () => {
        editing{{cname}} = {...NEW_RECORD};
        editorTitle = '新增{{caption}}';
        editorIsOpen = true;
    }

    /**
     * 打开{{caption}}修改窗口
     * @param {{name}}
     */
    const openModify = ({{name}}) => {
        editing{{cname}} = {...{{name}}};
        editorTitle = '修改{{caption}}';
        editorIsOpen = true;
    }

    /**
     * 删除数据项
     * @param {{name}}
     */
    const doRemove{{name}} = async ({{name}}) => {
        const passed = await APP_MESSAGE.confirm(`确认删除{{caption}}-${{"{"}}{{name}}.caption}?`);
        if(passed){
            {{name}}Store.remove{{cname}}({{name}}.id)
        }
    }

    /**
     * 查询数据
     * @param queryPageIndex
     */
    const doQuery =  async (queryPageIndex) => {
        pageIndex = queryPageIndex;
        await {{name}}Store.findByPager({pageIndex:queryPageIndex,pageSize})
    }

    onMount(async ()=>{
        await doQuery(pageIndex);
    });

</script>

<Toolbar>
    <Button title="新增{{caption}}" class="btn-sm btn-ghost" tooltipPosition="right" on:click={()=>openAdd{{cname}}()}>
        <Icon data={plusIcon}/>
    </Button>
</Toolbar>
<!-- -->
<DataTable
        {pageIndex} {pageSize}
        on:pagination={handle_pagination}
        records={${{name}}Store.records} {columns}
           totalCount={${{name}}Store.totalCount}>
</DataTable>
<!-- -->
<Editor title={editorTitle} {...editing{{cname}}} bind:isOpen={editorIsOpen}/>